{"ast":null,"code":"var _jsxFileName = \"/home/henrik/Documents/dev/checkoutmin/src/components/OnBoarding/OnBoarding.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { WalletContext } from '@utils/context';\nimport { Input, Form, Modal, Spin } from 'antd';\nimport { AntdFormWrapper } from '@components/Common/EnhancedInputs';\nimport { ExclamationCircleOutlined, PlusSquareOutlined, ImportOutlined, LockOutlined } from '@ant-design/icons';\nimport PrimaryButton, { SecondaryButton, SmartButton } from '@components/Common/PrimaryButton';\nimport { currency } from '@components/Common/Ticker.js';\nimport { Event } from '@utils/GoogleAnalytics';\nexport const WelcomeText = styled.p`\n    color: ${props => props.theme.wallet.text.secondary};\n    width: 100%;\n    font-size: 16px;\n    margin-bottom: 60px;\n    text-align: left;\n`;\nexport const WelcomeLink = styled.a`\n    text-decoration: underline;\n    color: ${props => props.theme.primary};\n`;\n\nconst OnBoarding = () => {\n  const ContextValue = React.useContext(WalletContext);\n  const {\n    createWallet,\n    validateMnemonic\n  } = ContextValue;\n  const [formData, setFormData] = useState({\n    dirty: true,\n    mnemonic: ''\n  });\n  const [seedInput, openSeedInput] = useState(false);\n  const [isValidMnemonic, setIsValidMnemonic] = useState(false);\n  const {\n    confirm\n  } = Modal;\n  useEffect(() => {\n    Event('Onboarding.js', 'Create Wallet', 'New');\n    createWallet();\n  }, []);\n\n  async function submit() {\n    setFormData({ ...formData,\n      dirty: false\n    });\n\n    if (!formData.mnemonic) {\n      return;\n    } // Event(\"Category\", \"Action\", \"Label\")\n    // Track number of created wallets from onboarding\n\n\n    Event('Onboarding.js', 'Create Wallet', 'Imported');\n    createWallet(formData.mnemonic);\n  }\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // Validate mnemonic on change\n    // Import button should be disabled unless mnemonic is valid\n\n    setIsValidMnemonic(validateMnemonic(value));\n    setFormData(p => ({ ...p,\n      [name]: value\n    }));\n  };\n\n  function showBackupConfirmModal() {\n    confirm({\n      title: \"Don't forget to back up your wallet\",\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }),\n      content: `Once your wallet is created you can back it up by writing down your 12-word seed. You can find your seed on the Settings page. If you are browsing in Incognito mode or if you clear your browser history, you will lose any funds that are not backed up!`,\n      okText: 'Okay, make me a wallet!',\n\n      onOk() {\n        // Event(\"Category\", \"Action\", \"Label\")\n        // Track number of created wallets from onboarding\n        Event('Onboarding.js', 'Create Wallet', 'New');\n        createWallet();\n      }\n\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(WelcomeText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Creating new wallet. Please wait.\"), /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default OnBoarding;","map":{"version":3,"sources":["/home/henrik/Documents/dev/checkoutmin/src/components/OnBoarding/OnBoarding.js"],"names":["React","useState","useEffect","styled","WalletContext","Input","Form","Modal","Spin","AntdFormWrapper","ExclamationCircleOutlined","PlusSquareOutlined","ImportOutlined","LockOutlined","PrimaryButton","SecondaryButton","SmartButton","currency","Event","WelcomeText","p","props","theme","wallet","text","secondary","WelcomeLink","a","primary","OnBoarding","ContextValue","useContext","createWallet","validateMnemonic","formData","setFormData","dirty","mnemonic","seedInput","openSeedInput","isValidMnemonic","setIsValidMnemonic","confirm","submit","handleChange","e","value","name","target","showBackupConfirmModal","title","icon","content","okText","onOk"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { WalletContext } from '@utils/context';\nimport { Input, Form, Modal, Spin } from 'antd';\nimport { AntdFormWrapper } from '@components/Common/EnhancedInputs';\nimport {\n    ExclamationCircleOutlined,\n    PlusSquareOutlined,\n    ImportOutlined,\n    LockOutlined,\n} from '@ant-design/icons';\nimport PrimaryButton, {\n    SecondaryButton,\n    SmartButton,\n} from '@components/Common/PrimaryButton';\nimport { currency } from '@components/Common/Ticker.js';\nimport { Event } from '@utils/GoogleAnalytics';\n\nexport const WelcomeText = styled.p`\n    color: ${props => props.theme.wallet.text.secondary};\n    width: 100%;\n    font-size: 16px;\n    margin-bottom: 60px;\n    text-align: left;\n`;\n\nexport const WelcomeLink = styled.a`\n    text-decoration: underline;\n    color: ${props => props.theme.primary};\n`;\n\nconst OnBoarding = () => {\n    const ContextValue = React.useContext(WalletContext);\n    const { createWallet, validateMnemonic } = ContextValue;\n    const [formData, setFormData] = useState({\n        dirty: true,\n        mnemonic: '',\n    });\n\n    const [seedInput, openSeedInput] = useState(false);\n    const [isValidMnemonic, setIsValidMnemonic] = useState(false);\n    const { confirm } = Modal;\n\n    useEffect(() => {\n        Event('Onboarding.js', 'Create Wallet', 'New');\n        createWallet();\n    }, []);\n\n    async function submit() {\n        setFormData({\n            ...formData,\n            dirty: false,\n        });\n\n        if (!formData.mnemonic) {\n            return;\n        }\n        // Event(\"Category\", \"Action\", \"Label\")\n        // Track number of created wallets from onboarding\n        Event('Onboarding.js', 'Create Wallet', 'Imported');\n        createWallet(formData.mnemonic);\n    }\n\n    const handleChange = e => {\n        const { value, name } = e.target;\n\n        // Validate mnemonic on change\n        // Import button should be disabled unless mnemonic is valid\n        setIsValidMnemonic(validateMnemonic(value));\n\n        setFormData(p => ({ ...p, [name]: value }));\n    };\n\n    function showBackupConfirmModal() {\n        confirm({\n            title: \"Don't forget to back up your wallet\",\n            icon: <ExclamationCircleOutlined />,\n            content: `Once your wallet is created you can back it up by writing down your 12-word seed. You can find your seed on the Settings page. If you are browsing in Incognito mode or if you clear your browser history, you will lose any funds that are not backed up!`,\n            okText: 'Okay, make me a wallet!',\n            onOk() {\n                // Event(\"Category\", \"Action\", \"Label\")\n                // Track number of created wallets from onboarding\n                Event('Onboarding.js', 'Create Wallet', 'New');\n                createWallet();\n            },\n        });\n    }\n\n    return (\n        <>\n            <WelcomeText>\n                Creating new wallet. Please wait.\n            </WelcomeText>\n            <Spin></Spin>\n        </>\n    );\n};\n\nexport default OnBoarding;\n"]},"metadata":{},"sourceType":"module"}