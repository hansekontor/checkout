{"ast":null,"code":"/*!\n * sha224.js - SHA224 implementation for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on indutny/hash.js:\n *   Copyright (c) 2014, Fedor Indutny (MIT License).\n *   https://github.com/indutny/hash.js\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/SHA-2\n *   https://tools.ietf.org/html/rfc4634\n *   https://github.com/indutny/hash.js/blob/master/lib/hash/sha/224.js\n */\n'use strict';\n\nconst assert = require('../internal/assert');\n\nconst SHA256 = require('./sha256');\n\nconst HMAC = require('../internal/hmac');\n/**\n * SHA224\n */\n\n\nclass SHA224 extends SHA256 {\n  constructor() {\n    super();\n  }\n\n  init() {\n    this.state[0] = 0xc1059ed8;\n    this.state[1] = 0x367cd507;\n    this.state[2] = 0x3070dd17;\n    this.state[3] = 0xf70e5939;\n    this.state[4] = 0xffc00b31;\n    this.state[5] = 0x68581511;\n    this.state[6] = 0x64f98fa7;\n    this.state[7] = 0xbefa4fa4;\n    this.size = 0;\n    return this;\n  }\n\n  final() {\n    return super.final().slice(0, 28);\n  }\n\n  static hash() {\n    return new SHA224();\n  }\n\n  static hmac() {\n    return new HMAC(SHA224, 64);\n  }\n\n  static digest(data) {\n    return SHA224.ctx.init().update(data).final();\n  }\n\n  static root(left, right) {\n    assert(Buffer.isBuffer(left) && left.length === 28);\n    assert(Buffer.isBuffer(right) && right.length === 28);\n    return SHA224.ctx.init().update(left).update(right).final();\n  }\n\n  static multi(x, y, z) {\n    const {\n      ctx\n    } = SHA224;\n    ctx.init();\n    ctx.update(x);\n    ctx.update(y);\n    if (z) ctx.update(z);\n    return ctx.final();\n  }\n\n  static mac(data, key) {\n    return SHA224.hmac().init(key).update(data).final();\n  }\n\n}\n/*\n * Static\n */\n\n\nSHA224.native = 0;\nSHA224.id = 'SHA224';\nSHA224.size = 28;\nSHA224.bits = 224;\nSHA224.blockSize = 64;\nSHA224.zero = Buffer.alloc(28, 0x00);\nSHA224.ctx = new SHA224();\n/*\n * Expose\n */\n\nmodule.exports = SHA224;","map":null,"metadata":{},"sourceType":"script"}