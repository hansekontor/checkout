{"ast":null,"code":"export const convertArrayBufferToBase64 = buffer => {\n  // convert the buffer from ArrayBuffer to Array of 8-bit unsigned integers\n  const dataView = new Uint8Array(buffer); // convert the Array of 8-bit unsigned integers to a String\n\n  const dataStr = dataView.reduce((str, cur) => str + String.fromCharCode(cur), ''); // convert String to base64\n\n  return window.btoa(dataStr);\n};\nexport const convertBase64ToArrayBuffer = base64Str => {\n  // convert base64 String to normal String\n  const dataStr = window.atob(base64Str); // convert the String to an Array of 8-bit unsigned integers\n\n  const dataView = Uint8Array.from(dataStr, char => char.charCodeAt(0));\n  return dataView.buffer;\n};","map":{"version":3,"sources":["/home/henrik/Documents/dev/checkoutmin/src/utils/convertArrBuffBase64.js"],"names":["convertArrayBufferToBase64","buffer","dataView","Uint8Array","dataStr","reduce","str","cur","String","fromCharCode","window","btoa","convertBase64ToArrayBuffer","base64Str","atob","from","char","charCodeAt"],"mappings":"AAAA,OAAO,MAAMA,0BAA0B,GAAGC,MAAM,IAAI;AAChD;AACA,QAAMC,QAAQ,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAjB,CAFgD,CAGhD;;AACA,QAAMG,OAAO,GAAGF,QAAQ,CAACG,MAAT,CACZ,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGE,MAAM,CAACC,YAAP,CAAoBF,GAApB,CADR,EAEZ,EAFY,CAAhB,CAJgD,CAQhD;;AACA,SAAOG,MAAM,CAACC,IAAP,CAAYP,OAAZ,CAAP;AACH,CAVM;AAYP,OAAO,MAAMQ,0BAA0B,GAAGC,SAAS,IAAI;AACnD;AACA,QAAMT,OAAO,GAAGM,MAAM,CAACI,IAAP,CAAYD,SAAZ,CAAhB,CAFmD,CAGnD;;AACA,QAAMX,QAAQ,GAAGC,UAAU,CAACY,IAAX,CAAgBX,OAAhB,EAAyBY,IAAI,IAAIA,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAjC,CAAjB;AACA,SAAOf,QAAQ,CAACD,MAAhB;AACH,CANM","sourcesContent":["export const convertArrayBufferToBase64 = buffer => {\n    // convert the buffer from ArrayBuffer to Array of 8-bit unsigned integers\n    const dataView = new Uint8Array(buffer);\n    // convert the Array of 8-bit unsigned integers to a String\n    const dataStr = dataView.reduce(\n        (str, cur) => str + String.fromCharCode(cur),\n        '',\n    );\n    // convert String to base64\n    return window.btoa(dataStr);\n};\n\nexport const convertBase64ToArrayBuffer = base64Str => {\n    // convert base64 String to normal String\n    const dataStr = window.atob(base64Str);\n    // convert the String to an Array of 8-bit unsigned integers\n    const dataView = Uint8Array.from(dataStr, char => char.charCodeAt(0));\n    return dataView.buffer;\n};\n"]},"metadata":{},"sourceType":"module"}