{"ast":null,"code":"/*!\n * pkcs5.js - PKCS5 padding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/PKCS\n *   https://tools.ietf.org/html/rfc2898\n *   https://tools.ietf.org/html/rfc8018\n */\n'use strict';\n\nconst assert = require('../internal/assert');\n/*\n * PKCS5\n */\n\n\nconst pkcs5 = {\n  pad(pt, size) {\n    assert(Buffer.isBuffer(pt));\n    assert(size >>> 0 === size);\n    assert(size > 0 && size < 256);\n    const left = size - pt.length % size;\n    const out = Buffer.allocUnsafe(pt.length + left);\n    pt.copy(out, 0);\n\n    for (let i = pt.length; i < out.length; i++) out[i] = left;\n\n    return out;\n  },\n\n  unpad(pt, size) {\n    assert(Buffer.isBuffer(pt));\n    assert(size >>> 0 === size);\n    assert(size > 0 && size < 256);\n    if (pt.length < size || pt.length % size !== 0) throw new Error('Invalid padding.');\n    const left = pt[pt.length - 1];\n    if (left === 0 || left > size) throw new Error('Invalid padding.');\n\n    for (let i = pt.length - left; i < pt.length; i++) {\n      if (pt[i] !== left) throw new Error('Invalid padding.');\n    }\n\n    return pt.slice(0, -left);\n  }\n\n};\n/*\n * Expose\n */\n\nmodule.exports = pkcs5;","map":null,"metadata":{},"sourceType":"script"}