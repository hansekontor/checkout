{"ast":null,"code":"/*!\n * aes.js - aes128/192/256 for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n'use strict';\n\nconst AES = require('./ciphers/aes');\n\nconst {\n  CBCCipher,\n  CBCDecipher\n} = require('./ciphers/modes');\n/**\n * Encrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\n\nfunction encipher(data, key, iv) {\n  const ctx = new CBCCipher(new AES(256));\n  ctx.init(key, iv);\n  return concat(ctx.update(data), ctx.final());\n}\n/**\n * Decrypt data with aes 256 cbc.\n * @param {Buffer} data\n * @param {Buffer} key\n * @param {Buffer} iv\n * @returns {Buffer}\n */\n\n\nfunction decipher(data, key, iv) {\n  const ctx = new CBCDecipher(new AES(256));\n  ctx.init(key, iv);\n  return concat(ctx.update(data), ctx.final());\n}\n/*\n * Helpers\n */\n\n\nfunction concat(a, b) {\n  const data = Buffer.allocUnsafe(a.length + b.length);\n  a.copy(data, 0);\n  b.copy(data, a.length);\n  return data;\n}\n/*\n * Expose\n */\n\n\nexports.native = 0;\nexports.encipher = encipher;\nexports.decipher = decipher;","map":null,"metadata":{},"sourceType":"script"}