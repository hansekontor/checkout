{"ast":null,"code":"/*!\n * eb2k.js - EVP_BytesToKey for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Parts of this software are based on crypto-browserify/EVP_BytesToKey:\n *   Copyright (c) 2017, crypto-browserify contributors\n *   https://github.com/crypto-browserify/EVP_BytesToKey\n *\n * Resources:\n *   https://github.com/openssl/openssl/blob/2e9d61e/crypto/evp/evp_key.c\n *   https://github.com/crypto-browserify/EVP_BytesToKey/blob/master/index.js\n *   https://github.com/openssl/openssl/blob/master/crypto/evp/evp_key.c\n */\n'use strict';\n\nconst assert = require('./internal/assert');\n\nconst MD5 = require('./md5');\n/*\n * EB2K\n */\n\n\nfunction derive(passwd, salt, keyLen, ivLen) {\n  if (typeof passwd === 'string') passwd = Buffer.from(passwd, 'utf8');\n  if (typeof salt === 'string') salt = Buffer.from(salt, 'utf8');\n  if (salt == null) salt = Buffer.alloc(0);\n  if (ivLen == null) ivLen = 0;\n  assert(Buffer.isBuffer(passwd));\n  assert(Buffer.isBuffer(salt));\n  assert(keyLen >>> 0 === keyLen);\n  assert(ivLen >>> 0 === ivLen);\n  if (salt.length > 8) salt = salt.slice(0, 8);\n  if (salt.length !== 0 && salt.length !== 8) throw new RangeError('Salt must be at least 8 bytes.');\n  const key = Buffer.alloc(keyLen);\n  const iv = Buffer.alloc(ivLen);\n  let prev = Buffer.alloc(0);\n\n  while (keyLen > 0 || ivLen > 0) {\n    let used = 0;\n    prev = MD5.multi(prev, passwd, salt);\n\n    if (keyLen > 0) {\n      const keyStart = key.length - keyLen;\n      used = Math.min(keyLen, prev.length);\n      prev.copy(key, keyStart, 0, used);\n      keyLen -= used;\n    }\n\n    if (used < prev.length && ivLen > 0) {\n      const ivStart = iv.length - ivLen;\n      const length = Math.min(ivLen, prev.length - used);\n      prev.copy(iv, ivStart, used, used + length);\n      ivLen -= length;\n    }\n  }\n\n  prev.fill(0x00);\n  return [key, iv];\n}\n/*\n * Expose\n */\n\n\nexports.native = 0;\nexports.derive = derive;","map":null,"metadata":{},"sourceType":"script"}