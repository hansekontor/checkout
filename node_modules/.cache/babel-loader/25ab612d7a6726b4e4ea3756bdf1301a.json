{"ast":null,"code":"/*!\n * pkcs3.js - PKCS3 encoding for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://www.teletrust.de/fileadmin/files/oid/oid_pkcs-3v1-4.pdf\n */\n'use strict';\n\nconst asn1 = require('./asn1');\n\nconst pem = require('./pem');\n/**\n * DHParams\n */\n\n\nclass DHParams extends asn1.Sequence {\n  constructor(p, g) {\n    super();\n    this.p = new asn1.Unsigned(p);\n    this.g = new asn1.Unsigned(g);\n  }\n\n  getBodySize() {\n    let size = 0;\n    size += this.p.getSize();\n    size += this.g.getSize();\n    return size;\n  }\n\n  writeBody(bw) {\n    this.p.write(bw);\n    this.g.write(bw);\n    return bw;\n  }\n\n  readBody(br) {\n    this.p.read(br);\n    this.g.read(br);\n    return this;\n  }\n\n  clean() {\n    return this.p.clean() && this.g.clean();\n  }\n\n  toPEM() {\n    return pem.toPEM(this.encode(), 'DH PARAMETERS');\n  }\n\n  fromPEM(str) {\n    const data = pem.fromPEM(str, 'DH PARAMETERS');\n    return this.decode(data);\n  }\n\n  format() {\n    return {\n      type: this.constructor.name,\n      p: this.p,\n      g: this.g\n    };\n  }\n\n}\n/*\n * Expose\n */\n\n\nexports.DHParams = DHParams;","map":null,"metadata":{},"sourceType":"script"}