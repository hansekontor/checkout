{"ast":null,"code":"/*!\n * shake256.js - SHAKE256 implementation for bcrypto\n * Copyright (c) 2017-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n */\n'use strict';\n\nconst SHAKE = require('./shake');\n/**\n * SHAKE256\n */\n\n\nclass SHAKE256 extends SHAKE {\n  constructor() {\n    super();\n  }\n\n  init() {\n    return super.init(256);\n  }\n\n  static hash() {\n    return new SHAKE256();\n  }\n\n  static hmac(len) {\n    return super.hmac(256, len);\n  }\n\n  static digest(data, len) {\n    return super.digest(data, 256, len);\n  }\n\n  static root(left, right, len) {\n    return super.root(left, right, 256, len);\n  }\n\n  static multi(x, y, z, len) {\n    return super.multi(x, y, z, 256, len);\n  }\n\n  static mac(data, key, len) {\n    return super.mac(data, key, 256, len);\n  }\n\n}\n/*\n * Static\n */\n\n\nSHAKE256.native = SHAKE.native;\nSHAKE256.id = 'SHAKE256';\nSHAKE256.size = 32;\nSHAKE256.bits = 256;\nSHAKE256.blockSize = 136;\nSHAKE256.zero = Buffer.alloc(32, 0x00);\nSHAKE256.ctx = new SHAKE256();\n/*\n * Expose\n */\n\nmodule.exports = SHAKE256;","map":null,"metadata":{},"sourceType":"script"}