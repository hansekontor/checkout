{"ast":null,"code":"/*!\n * scripterror.js - script error for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n'use strict';\n/**\n * Script Error\n * An error thrown from the scripting system,\n * potentially pertaining to Script execution.\n * @alias module:script.ScriptError\n * @extends Error\n * @property {String} message - Error message.\n * @property {String} code - Original code passed in.\n * @property {Number} op - Opcode.\n * @property {Number} ip - Instruction pointer.\n */\n\nclass ScriptError extends Error {\n  /**\n   * Create an error.\n   * @constructor\n   * @param {String} code - Error code.\n   * @param {Opcode} op - Opcode.\n   * @param {Number?} ip - Instruction pointer.\n   */\n  constructor(code, op, ip) {\n    super();\n    this.type = 'ScriptError';\n    this.code = code;\n    this.message = code;\n    this.op = -1;\n    this.ip = -1;\n\n    if (typeof op === 'string') {\n      this.message = op;\n    } else if (op) {\n      this.message = `${code} (op=${op.toSymbol()}, ip=${ip})`;\n      this.op = op.value;\n      this.ip = ip;\n    }\n\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ScriptError);\n  }\n\n}\n/*\n * Expose\n */\n\n\nmodule.exports = ScriptError;","map":{"version":3,"sources":["/home/henrik/Documents/dev/checkoutmin/src/utils/bcash/script/scripterror.js"],"names":["ScriptError","Error","constructor","code","op","ip","type","message","toSymbol","value","captureStackTrace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,WAAN,SAA0BC,KAA1B,CAAgC;AAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AAEEC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,EAAX,EAAe;AACxB;AAEA,SAAKC,IAAL,GAAY,aAAZ;AACA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKI,OAAL,GAAeJ,IAAf;AACA,SAAKC,EAAL,GAAU,CAAC,CAAX;AACA,SAAKC,EAAL,GAAU,CAAC,CAAX;;AAEA,QAAI,OAAOD,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAKG,OAAL,GAAeH,EAAf;AACD,KAFD,MAEO,IAAIA,EAAJ,EAAQ;AACb,WAAKG,OAAL,GAAgB,GAAEJ,IAAK,QAAOC,EAAE,CAACI,QAAH,EAAc,QAAOH,EAAG,GAAtD;AACA,WAAKD,EAAL,GAAUA,EAAE,CAACK,KAAb;AACA,WAAKJ,EAAL,GAAUA,EAAV;AACD;;AAED,QAAIJ,KAAK,CAACS,iBAAV,EACET,KAAK,CAACS,iBAAN,CAAwB,IAAxB,EAA8BV,WAA9B;AACH;;AA5B6B;AA+BhC;AACA;AACA;;;AAEAW,MAAM,CAACC,OAAP,GAAiBZ,WAAjB","sourcesContent":["/*!\n * scripterror.js - script error for bcoin\n * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n */\n\n'use strict';\n\n/**\n * Script Error\n * An error thrown from the scripting system,\n * potentially pertaining to Script execution.\n * @alias module:script.ScriptError\n * @extends Error\n * @property {String} message - Error message.\n * @property {String} code - Original code passed in.\n * @property {Number} op - Opcode.\n * @property {Number} ip - Instruction pointer.\n */\n\nclass ScriptError extends Error {\n  /**\n   * Create an error.\n   * @constructor\n   * @param {String} code - Error code.\n   * @param {Opcode} op - Opcode.\n   * @param {Number?} ip - Instruction pointer.\n   */\n\n  constructor(code, op, ip) {\n    super();\n\n    this.type = 'ScriptError';\n    this.code = code;\n    this.message = code;\n    this.op = -1;\n    this.ip = -1;\n\n    if (typeof op === 'string') {\n      this.message = op;\n    } else if (op) {\n      this.message = `${code} (op=${op.toSymbol()}, ip=${ip})`;\n      this.op = op.value;\n      this.ip = ip;\n    }\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, ScriptError);\n  }\n}\n\n/*\n * Expose\n */\n\nmodule.exports = ScriptError;\n"]},"metadata":{},"sourceType":"module"}