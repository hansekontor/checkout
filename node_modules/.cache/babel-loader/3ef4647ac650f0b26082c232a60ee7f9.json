{"ast":null,"code":"/*!\n * dsaies.js - dsaies for javascript\n * Copyright (c) 2018-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://en.wikipedia.org/wiki/Integrated_Encryption_Scheme\n *   https://nacl.cr.yp.to/secretbox.html\n */\n'use strict';\n\nconst assert = require('./internal/assert');\n\nconst dsa = require('./dsa');\n\nconst random = require('./random');\n\nconst box = require('./secretbox');\n\nconst {\n  padLeft\n} = require('./encoding/util');\n/*\n * DSAIES\n */\n\n\nfunction encrypt(kdf, msg, pub) {\n  let priv = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  assert(kdf != null);\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(pub));\n  assert(priv == null || Buffer.isBuffer(priv));\n\n  if (priv == null) {\n    const params = dsa.paramsCreate(pub);\n    priv = dsa.privateKeyCreate(params);\n  }\n\n  const klen = dsa.publicKeyBits(pub) + 7 >>> 3;\n  const {\n    y\n  } = dsa.privateKeyExport(priv);\n  const secret = dsa.derive(pub, priv);\n  const key = box.derive(secret, kdf);\n  const nonce = random.randomBytes(24);\n  const ourY = padLeft(y, klen);\n  const sealed = box.seal(msg, key, nonce);\n  return Buffer.concat([ourY, nonce, sealed]);\n}\n\nfunction decrypt(kdf, msg, priv) {\n  assert(kdf != null);\n  assert(Buffer.isBuffer(msg));\n  assert(Buffer.isBuffer(priv));\n  const klen = dsa.privateKeyBits(priv) + 7 >>> 3;\n  if (msg.length < klen + 24) throw new Error('Invalid ciphertext.');\n  const {\n    p,\n    q,\n    g\n  } = dsa.privateKeyExport(priv);\n  const y = msg.slice(0, klen);\n  const theirPub = dsa.publicKeyImport({\n    p,\n    q,\n    g,\n    y\n  });\n  const nonce = msg.slice(klen, klen + 24);\n  const sealed = msg.slice(klen + 24);\n  const secret = dsa.derive(theirPub, priv);\n  const key = box.derive(secret, kdf);\n  return box.open(sealed, key, nonce);\n}\n/*\n * Expose\n */\n\n\nexports.encrypt = encrypt;\nexports.decrypt = decrypt;","map":null,"metadata":{},"sourceType":"script"}